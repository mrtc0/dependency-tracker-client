=begin
#Dependency-Track API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 3.8.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for DependencyTacker::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = DependencyTacker::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(DependencyTacker::DefaultApi)
    end
  end

  # unit tests for add_project_to_rule
  # Adds a project to a notification rule
  # @param rule_uuid The UUID of the rule to add a project to
  # @param project_uuid The UUID of the project to add to the rule
  # @param [Hash] opts the optional parameters
  # @return [NotificationRule]
  describe 'add_project_to_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_notification_rule
  # Creates a new notification rule
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationRule] :body 
  # @return [NotificationRule]
  describe 'create_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_notification_rule
  # Deletes a notification rule
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationRule] :body 
  # @return [nil]
  describe 'delete_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_notification_publishers
  # Returns a list of all notification publishers
  # @param [Hash] opts the optional parameters
  # @return [Array<NotificationPublisher>]
  describe 'get_all_notification_publishers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_notification_rules
  # Returns a list of all notification rules
  # @param [Hash] opts the optional parameters
  # @return [Array<NotificationRule>]
  describe 'get_all_notification_rules test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_project_from_rule
  # Removes a project from a notification rule
  # @param rule_uuid The UUID of the rule to remove the project from
  # @param project_uuid The UUID of the project to remove from the rule
  # @param [Hash] opts the optional parameters
  # @return [NotificationRule]
  describe 'remove_project_from_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_smtp_publisher_config
  # Dispatches a SMTP notification test
  # @param [Hash] opts the optional parameters
  # @option opts [String] :destination 
  # @return [nil]
  describe 'test_smtp_publisher_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_rule
  # Updates a notification rule
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationRule] :body 
  # @return [NotificationRule]
  describe 'update_notification_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
