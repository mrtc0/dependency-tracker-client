=begin
#Dependency-Track API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 3.8.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for DependencyTacker::ProjectApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectApi' do
  before do
    # run before each test
    @api_instance = DependencyTacker::ProjectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectApi' do
    it 'should create an instance of ProjectApi' do
      expect(@api_instance).to be_instance_of(DependencyTacker::ProjectApi)
    end
  end

  # unit tests for clone_project
  # Clones a project
  # @param [Hash] opts the optional parameters
  # @option opts [CloneProjectRequest] :body 
  # @return [Project]
  describe 'clone_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_project
  # Creates a new project
  # If a parent project exists, the UUID of the parent project is required 
  # @param [Hash] opts the optional parameters
  # @option opts [Project] :body 
  # @return [Project]
  describe 'create_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project
  # Deletes a project
  # @param uuid The UUID of the project to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # Returns a specific project by its name and version
  # @param name The name of the project to query on
  # @param version The version of the project to query on
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project1
  # Returns a specific project
  # @param uuid The UUID of the project to retrieve
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'get_project1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects
  # Returns a list of all projects
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name The optional name of the project to query on
  # @option opts [Boolean] :exclude_inactive Optionally excludes inactive projects from being returned
  # @return [Array<Project>]
  describe 'get_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects_by_tag
  # Returns a list of all projects by tag
  # @param tag The tag to query on
  # @param [Hash] opts the optional parameters
  # @return [Array<Project>]
  describe 'get_projects_by_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project
  # Updates a project
  # @param [Hash] opts the optional parameters
  # @option opts [Project] :body 
  # @return [Project]
  describe 'update_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
