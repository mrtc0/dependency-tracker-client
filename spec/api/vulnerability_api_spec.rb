=begin
#Dependency-Track API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 3.8.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for DependencyTacker::VulnerabilityApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VulnerabilityApi' do
  before do
    # run before each test
    @api_instance = DependencyTacker::VulnerabilityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VulnerabilityApi' do
    it 'should create an instance of VulnerabilityApi' do
      expect(@api_instance).to be_instance_of(DependencyTacker::VulnerabilityApi)
    end
  end

  # unit tests for assign_vulnerability
  # Assigns a vulnerability to a component
  # @param source The vulnerability source
  # @param vuln_id The vulnId
  # @param component The UUID of the component
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'assign_vulnerability test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for assign_vulnerability1
  # Assigns a vulnerability to a component
  # @param uuid The UUID of the vulnerability
  # @param component The UUID of the component
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'assign_vulnerability1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_vulnerability
  # Creates a new vulnerability
  # @param [Hash] opts the optional parameters
  # @option opts [Vulnerability] :body 
  # @return [Vulnerability]
  describe 'create_vulnerability test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_affected_project
  # Returns a list of all projects affected by a specific vulnerability
  # @param source 
  # @param vuln 
  # @param [Hash] opts the optional parameters
  # @return [Array<Project>]
  describe 'get_affected_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_vulnerabilities
  # Returns a list of all vulnerabilities
  # @param [Hash] opts the optional parameters
  # @return [Array<Vulnerability>]
  describe 'get_all_vulnerabilities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerabilities_by_component
  # Returns a list of all vulnerabilities for a specific component
  # A valid UUID of the component may be specified, or the MD5 or SHA1 hash of the component
  # @param ident 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :suppressed Optionally includes suppressed vulnerabilities
  # @return [Array<Vulnerability>]
  describe 'get_vulnerabilities_by_component test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerabilities_by_project
  # Returns a list of all vulnerabilities for a specific project
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :suppressed Optionally includes suppressed vulnerabilities
  # @return [Array<Vulnerability>]
  describe 'get_vulnerabilities_by_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_by_uuid
  # Returns a specific vulnerability
  # @param uuid The UUID of the vulnerability
  # @param [Hash] opts the optional parameters
  # @return [Vulnerability]
  describe 'get_vulnerability_by_uuid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_by_vuln_id
  # Returns a specific vulnerability
  # @param source 
  # @param vuln 
  # @param [Hash] opts the optional parameters
  # @return [Vulnerability]
  describe 'get_vulnerability_by_vuln_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unassign_vulnerability
  # Removes assignment of a vulnerability from a component
  # @param source The vulnerability source
  # @param vuln_id The vulnId
  # @param component The UUID of the component
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unassign_vulnerability test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unassign_vulnerability1
  # Removes assignment of a vulnerability from a component
  # @param uuid The UUID of the vulnerability
  # @param component The UUID of the component
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unassign_vulnerability1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_vulnerability
  # Updates an internal vulnerability
  # @param [Hash] opts the optional parameters
  # @option opts [Vulnerability] :body 
  # @return [Project]
  describe 'update_vulnerability test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
